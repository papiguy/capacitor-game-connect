{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import type { PlayerScore } from './interfaces/player-score.interface';\n\nexport interface CapacitorGameConnectPlugin {\n  /**\n   * * Method to sign-in a user\n   *\n   *\n   */\n  signIn(): Promise<{\n    player_name: string;\n    player_id: string;\n  }>;\n\n  /**\n   * * Method to display the Leaderboards\n   *\n   * @param leaderboardID as string\n   */\n  showLeaderboard(options: { leaderboardID: string }): Promise<void>;\n\n  /**\n   * * Method to submit a score to the Google Play Services SDK\n   *\n   */\n  submitScore(options: {\n    leaderboardID: string;\n    totalScoreAmount: number;\n  }): Promise<void>;\n\n  /**\n   * * Method to display the Achievements view\n   *\n   */\n  showAchievements(): Promise<void>;\n\n  /**\n   * * Method to unlock an achievement\n   *\n   */\n  unlockAchievement(options: { achievementID: string }): Promise<void>;\n\n  /**\n   * * Method to increment the progress of an achievement\n   */\n  incrementAchievementProgress(options: {\n    achievementID: string;\n    pointsToIncrement: number;\n  }): Promise<void>;\n\n  /**\n   * * Method to get total player score from a leaderboard\n   *\n   * @param options { leaderboardID: string }\n   */\n  getUserTotalScore(options: { leaderboardID: string }): Promise<PlayerScore>;\n}\n"]}